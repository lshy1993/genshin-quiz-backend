//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type QuizCategory string

const (
	QuizCategory_Characters QuizCategory = "characters"
	QuizCategory_Weapons    QuizCategory = "weapons"
	QuizCategory_Artifacts  QuizCategory = "artifacts"
	QuizCategory_Lore       QuizCategory = "lore"
	QuizCategory_Gameplay   QuizCategory = "gameplay"
)

var QuizCategoryAllValues = []QuizCategory{
	QuizCategory_Characters,
	QuizCategory_Weapons,
	QuizCategory_Artifacts,
	QuizCategory_Lore,
	QuizCategory_Gameplay,
}

func (e *QuizCategory) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "characters":
		*e = QuizCategory_Characters
	case "weapons":
		*e = QuizCategory_Weapons
	case "artifacts":
		*e = QuizCategory_Artifacts
	case "lore":
		*e = QuizCategory_Lore
	case "gameplay":
		*e = QuizCategory_Gameplay
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for QuizCategory enum")
	}

	return nil
}

func (e QuizCategory) String() string {
	return string(e)
}
