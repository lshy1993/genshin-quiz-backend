//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type QuestionOptionType string

const (
	QuestionOptionType_Text  QuestionOptionType = "text"
	QuestionOptionType_Image QuestionOptionType = "image"
	QuestionOptionType_Audio QuestionOptionType = "audio"
)

var QuestionOptionTypeAllValues = []QuestionOptionType{
	QuestionOptionType_Text,
	QuestionOptionType_Image,
	QuestionOptionType_Audio,
}

func (e *QuestionOptionType) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "text":
		*e = QuestionOptionType_Text
	case "image":
		*e = QuestionOptionType_Image
	case "audio":
		*e = QuestionOptionType_Audio
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for QuestionOptionType enum")
	}

	return nil
}

func (e QuestionOptionType) String() string {
	return string(e)
}
