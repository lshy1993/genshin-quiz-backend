//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type QuizDifficulty string

const (
	QuizDifficulty_Easy   QuizDifficulty = "easy"
	QuizDifficulty_Medium QuizDifficulty = "medium"
	QuizDifficulty_Hard   QuizDifficulty = "hard"
)

var QuizDifficultyAllValues = []QuizDifficulty{
	QuizDifficulty_Easy,
	QuizDifficulty_Medium,
	QuizDifficulty_Hard,
}

func (e *QuizDifficulty) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "easy":
		*e = QuizDifficulty_Easy
	case "medium":
		*e = QuizDifficulty_Medium
	case "hard":
		*e = QuizDifficulty_Hard
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for QuizDifficulty enum")
	}

	return nil
}

func (e QuizDifficulty) String() string {
	return string(e)
}
