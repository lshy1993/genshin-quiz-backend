//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type Difficulty string

const (
	Difficulty_Easy   Difficulty = "easy"
	Difficulty_Medium Difficulty = "medium"
	Difficulty_Hard   Difficulty = "hard"
)

var DifficultyAllValues = []Difficulty{
	Difficulty_Easy,
	Difficulty_Medium,
	Difficulty_Hard,
}

func (e *Difficulty) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "easy":
		*e = Difficulty_Easy
	case "medium":
		*e = Difficulty_Medium
	case "hard":
		*e = Difficulty_Hard
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for Difficulty enum")
	}

	return nil
}

func (e Difficulty) String() string {
	return string(e)
}
