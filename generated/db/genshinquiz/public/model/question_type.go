//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type QuestionType string

const (
	QuestionType_MultipleChoice QuestionType = "multiple_choice"
	QuestionType_TrueFalse      QuestionType = "true_false"
	QuestionType_FillInBlank    QuestionType = "fill_in_blank"
)

var QuestionTypeAllValues = []QuestionType{
	QuestionType_MultipleChoice,
	QuestionType_TrueFalse,
	QuestionType_FillInBlank,
}

func (e *QuestionType) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "multiple_choice":
		*e = QuestionType_MultipleChoice
	case "true_false":
		*e = QuestionType_TrueFalse
	case "fill_in_blank":
		*e = QuestionType_FillInBlank
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for QuestionType enum")
	}

	return nil
}

func (e QuestionType) String() string {
	return string(e)
}
